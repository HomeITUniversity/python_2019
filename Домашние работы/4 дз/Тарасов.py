# -*- coding: utf-8 -*-
"""04_dict_and_set_homework.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/0Bz0EdX9dKLMKQWRtS1g3a3didHhDa1Vuc2VOUXF2alVZU2hr

# Задача 1

Дан список сотрудников банка. 
names = [«Иван», «Марина», «Виталий», «Александр»]
lastnames = [«Салтыков», «Иванова», «Жученко», «Петров»]
middlenames = [«Романович», «Ивановна», «Даниилович», «Евгеньевич»]
ages = [24, 25, 30, 28]
Нужно составить словарь, в котором ключом будет ФИО, а значением возраст.

Мягкий дедлайн: 9 октрября.

Жеcткий дедлайн 16 октрября.
"""

names = ['Иван', 'Марина', 'Виталий', 'Александр']
lastnames = ['Салтыков', 'Иванова', 'Жученко', 'Петров']
middlenames = ['Романович', 'Ивановна', 'Даниилович', 'Евгеньевич']
ages = [24, 25, 30, 28]
result_dict = {}

# ваш код тут

for n, l, m, a in zip(names, lastnames, middlenames, ages):
  result_dict[l+' '+n+' '+ m] = a
print(result_dict)
  
true_result_dict = {
    'Салтыков Иван Романович': 24, 
    'Иванова Марина Ивановна': 25, 
    'Жученко Виталий Даниилович': 30, 
    'Петров Александр Евгеньевич': 28
}
assert result_dict == true_result_dict
print("OK")

#если воникает эта ошибка "AssertionError" значит вы решили не верно, 
#иначе вы решили все верно

"""# Задача 2
Дан текст. Найти частоту встречания символов в тексте и оформить это как словарь. Где символ – ключ, частота встречания – значения. Спец. Символы исключить.
"""

s = "А из города уже выступало неприятельское войско, гремя в литавры и трубы. Подбоченясь, выезжали паны, окруженные несметными слугами. И стали они наступать тесно на казацкие таборы, грозя, нацеливаясь пищалями, сверкая очами и блеща медными доспехами. Дымом затянуло все поле, а запорожцы все палили, не переводя дух."
result_dict = {}

# ваш код тут
t = s.replace(',','').replace('.','').replace(' ','').lower()
for i in t:
  if i in t:
    result_dict[i] = t.count(i)
    t = t.replace(i,'')
print (result_dict)

true_result_dict = {'а': 25, 'и': 20, 'з': 6, 'г': 4, 'о': 21, 'р': 11, 'д': 7, 'у': 8, 'ж': 4, 'е': 24, 'в': 10, 'ы': 11, 'с': 14, 'т': 11, 'п': 11, 'л': 13, 'н': 15, 'я': 9, 'ь': 4, 'к': 6, 'й': 1, 'м': 11, 'б': 4, 'ч': 2, 'ц': 3, 'щ': 2, 'х': 2}

assert result_dict == true_result_dict
print("OK")

"""# Задача 3
Составить словарь из двух ключей "unique", "nonunique". В первый ключ положить список уникальных слов, во второй не уникальных.
"""

s = """Это слово, которое я в детстве постоянно слышал от моей мамы.
Мама произносила это слово так нежно и так серьезно, словно оно обозначало что-то столь важное, неотъемлемое.
Я любил это слово, из-за этого я делал все, чтоб его услышать как можно чаще.
Я вырос. Я понял, что это слово не представляет из себя чего-то сверхъестественного, не обозначает оно какое-то божество и произнести его можно по разному.
Это слово самое обычное... но в то же время самое сильное.
Это слово ~ Спасибо."""
result_dict = {}
# ваш код тут

t = s.replace(',','').replace('.','').replace('~','').lower().split()
un = []
nonun = []

for x in t:
  if t.count(x) > 1:
    if x not in nonun:
      nonun.append(x)
  else:
    if x not in un:
      un.append(x)
result_dict['unique'] = un
result_dict['nonunique'] = nonun
print(result_dict)

true_result_dict = {
    'unique': ['которое', 'детстве', 'постоянно', 'слышал', 'от', 'моей', 'мамы', 'мама', 'произносила', 'нежно', 'серьезно', 'словно', 'обозначало', 'что-то', 'столь', 'важное', 'неотъемлемое', 'любил', 'из-за', 'этого', 'делал', 'все', 'чтоб', 'услышать', 'как', 'чаще', 'вырос', 'понял', 'что', 'представляет', 'из', 'себя', 'чего-то', 'сверхъестественного', 'обозначает', 'какое-то', 'божество', 'произнести', 'по', 'разному', 'обычное', 'но', 'то', 'же', 'время', 'сильное', 'спасибо'], 
    'nonunique': ['это', 'слово', 'я', 'в', 'так', 'и', 'оно', 'его', 'можно', 'не', 'самое']
}

assert result_dict == true_result_dict
print("OK")



"""# Задача 4

Маша и Аня работают в отделе продаж нашего банка и продают Кредиты наличными. <br>
Оформленные ими кредиты представлены в соответствующих словарях (сумма кредита, ставка, срок в годах)<br>
Среди клиентов Маши и Ани найти клиентов и вывести на экран, у которых:<br>
•	Совпадает ставка<br>
•	Совпадает сумма кредита<br>
•	Совпадает срок выплаты<br>
•	Не совпадает сумма, но совпадает срок выплаты<br>
•	Совпадает процентная ставка, но не совпадает сумма кредита.<br>
Условие может, как выполниться, так и не выполниться (такое пересечение может быть пустым)<br>

Выводить ВСЕ значения которые имеют совпадения.
"""

masha_credits = {
        'Салтыков Иван': {
        'credit': 80000,
        'percent': 22.5,
        'period': 3
    },
        'Иванова Марина': {
        'credit': 240000,
        'percent': 20.8,
        'period': 5
    },
        'Жученко Виталий': {
        'credit': 35000,
        'percent': 19.4,
        'period': 2
    },
        'Петров Александр': {
        'credit': 100000,
        'percent': 27.9,
        'period': 3
    },
        'Краснов Антон': {
        'credit': 10000,
        'percent': 55.2,
        'period': 1
    },
        'Полено Елена': {
        'credit': 330000,
        'percent': 4.0,
        'period': 1
    },
}

ann_credits = {
        'Букин Геннадий': {
        'credit': 1000,
        'percent': 55.2,
        'period': 20
    },
        'Антонов Юрий': {
        'credit': 20000,
        'percent': 20.8,
        'period': 4
    },
        'Трененков Виталий': {
        'credit': 35000,
        'percent': 20.1,
        'period': 1
    },
        'Самоваров Павел': {
        'credit': 100000,
        'percent': 27.9,
        'period': 2
    },
        'Самсонов Владимир': {
        'credit': 76000,
        'percent': 11.9,
        'period': 4
    },
        'Антонина Антонина': {
        'credit': 1100000,
        'percent': 4.0,
        'period': 5
    },
        'Колованов Ярослав': {
        'credit': 25000,
        'percent': 22.2,
        'period': 2
    },
        'Чайкина Наталья': {
        'credit': 330000,
        'percent': 18.9,
        'period': 3
    },
}

# ваше решение тут

from collections import Counter

all_credits = dict(masha_credits)
all_credits.update(ann_credits)

# Совпадает сумма кредита
names_credit = {}
names = []

for x, y in all_credits.items():
  for k, v in y.items():
    if k == 'credit':
      names_credit[x] = v
for k, v in names_credit.items():
  if (Counter(names_credit.values())[v]) > 1 and k not in names:
    names.append(k)
print('Совпадает сумма кредита:', names)

# Совпадает ставка
names_credit = {}
names_pr = []

for x, y in all_credits.items():
  for k, v in y.items():
    if k == 'percent':
      names_credit[x] = v
for k, v in names_credit.items():
  if (Counter(names_credit.values())[v]) > 1 and k not in names_pr:
    names_pr.append(k)
print('Совпадает ставка:',names_pr)

# Совпадает срок выплаты
names_credit = {}
names_sr = []

for x, y in all_credits.items():
  for k, v in y.items():
    if k == 'period':
      names_credit[x] = v
for k, v in names_credit.items():
  if (Counter(names_credit.values())[v]) > 1 and k not in names_sr:
    names_sr.append(k)
print('Совпадает срок выплаты:',names_sr)


# Совпадает процентная ставка, но не совпадает сумма кредита

pr = {}
res = []
for x, y in all_credits.items():
  for k, v in y.items():
    for i in names_pr:
      if i == x:
        if k == 'credit':
          pr[x] = v
for k, v in pr.items():
  if (Counter(pr.values())[v]) == 1 and k not in res:
    res.append(k)
print('Совпадает процентная ставка, но не совпадает сумма кредита:',res)

# Не совпадает сумма, но совпадает срок выплаты

summ = {}
res = []
for x, y in all_credits.items():
  for k, v in y.items():
    for i in names_sr:
      if i == x:
        if k == 'credit':
          summ[x] = v
for k, v in summ.items():
  if (Counter(summ.values())[v]) == 1 and k not in res:
    res.append(k)
print('Не совпадает сумма, но совпадает срок выплаты:',res)

"""# Задача 5
Суть задачи в том, чтобы из англо-латинского словаря сделать латино-английский.

Входные данные:<br>
Даны строки (необходимо представить в виде словаря)

apple - malum, pomum, popula<br>
fruit - baca, bacca, popum<br>
punishment - malum, multa<br>

Выходные данные:<br>
baca - fruit<br>
bacca - fruit<br>
malum - apple, punishment<br>
multa - punishment<br>
pomum - apple<br>
popula - apple<br>
popum - fruit<br>
"""

# ваше решение тут

el = {}
el['apple'] = ['malum', 'pomum', 'popula']
el['fruit'] = ['baca', 'bacca', 'popum']
el['punishment'] = ['malum', 'multa']

res = {}

for k,v in el.items():
  for i in v:
    if i in res:
      res[i].append(k)
    else:
      res[i] = [k]
print(el)
print(res)