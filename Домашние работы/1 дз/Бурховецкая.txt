{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.3"
    },
    "colab": {
      "name": "01_digits_homework.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "K-BjxTQSecuZ",
        "colab_type": "text"
      },
      "source": [
        "#### Мягкий дедлайн: 18 сентября 23:59\n",
        "#### Жесткий дедлайн: 25 сентября 23:59\n",
        "\n",
        "Отправляйте Notebook файл с решение по адресу homeituniversity@gmail.com\n",
        "\n",
        "Тема письма: Python курс > ДЗ 1 > ФИО"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aWU7EATkecuf",
        "colab_type": "text"
      },
      "source": [
        "# Задача 1\n",
        "Если мы перечислим все натуральные числа меньше 10, кратные 3 или 5, мы получим 3, 5, 6 и 9. Сумма этих кратных чисел равна 23.\n",
        "Найти сумму всех кратных 3 или 5 меньше 1000."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dRPD2NJEecug",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Впишите сюда ваше решение\n",
        "\n",
        "n = int                       # натуральное число\n",
        "sum = 0                       # сумма всех кратных\n",
        "for n in range(1000):         # для всех целых чисел в цикле до 1000\n",
        " if n % 3 == 0 or n % 5 == 0: # при условии, что при делении цел.числа на 3 или на 5 делятся без остатка\n",
        "  sum += n                    # сумма всех кратных 3 или 5 меньше 1000\n",
        "  print(sum)                  # вывести сумму на экран\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "76i9RGJ7ecuk",
        "colab_type": "text"
      },
      "source": [
        "# Задача 2\n",
        "Каждый новый член в последовательности Фибоначчи генерируется путем добавления двух предыдущих членов. \n",
        "Начиная с 1 и 2, первые 10 слагаемых будут:\n",
        "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, …\n",
        "Рассматривая члены в последовательности Фибоначчи, значения которых не превышают четырех миллионов, найдите сумму четных членов.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ndwyxo63ecul",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Впишите сюда ваше решение\n",
        "\n",
        "r = 0              # результат\n",
        "f = 0              # фибоначчи\n",
        "ch1 = 1            # 1 член\n",
        "ch2 = 0            # 2 член\n",
        "while f < 4000000: # пока фибоначчи меньше 4000000\n",
        "    f = ch1 + ch2  # фибоначчи = 1 член + 2 член\n",
        "    ch2 = ch1      # 2 член = 1 член\n",
        "    ch1 = f        # 1 член = фибоначчи\n",
        "    if f % 2 == 0: # если два члена \n",
        "        r += f     # результат суммы членов\n",
        "print(r)           # вывести результат суммы на экран\n",
        "\n",
        "\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ugK_jGdyecuo",
        "colab_type": "text"
      },
      "source": [
        "# Задача 3\n",
        "Посчитать факториал числа 155, не применяя библиотечные функции."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qRLqemHIecuo",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Впишите сюда ваше решение\n",
        "\n",
        "f = 1                  # факториал\n",
        "for i in range(1,156): #\n",
        "  f *= i               #\n",
        "print(f)               # вывести факториал 155\n",
        "\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "O-udSbDUecus",
        "colab_type": "text"
      },
      "source": [
        "# Задача 4\n",
        "Пользователь делает вклад в размере 155 899 рублей сроком на 16 лет под 8,56% годовых(каждый год размер его вклада увеличивается на %. Эти деньги прибавляются к сумме вклада, и на них в следующем году тоже будут проценты).\n",
        "Какая сумма будет на счету клиента через 5, 8, 12, 16 лет?\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GUDYXUHpecuu",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Впишите сюда ваше решение\n",
        "\n",
        "# s - доходность\n",
        "# p - первоначальная величина вклада\n",
        "# i - процентная ставка\n",
        "# t1, t2, t3, t4 - на сколько времени открыт вклад 5,8,12,16\n",
        "\n",
        "# формула: s1 = p х (1 + i/12)^t1\n",
        "#          s2 = p х (1 + i/12)^t2\n",
        "#          s3 = p х (1 + i/12)^t3\n",
        "#          s4 = p х (1 + i/12)^t4\n",
        "\n",
        "p = 155899\n",
        "i = 8,56\n",
        "s1 = p * ((1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12))\n",
        "s2 = p * ((1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12))\n",
        "s3 = p * ((1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12))\n",
        "s4 = p * ((1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12) * (1 + i/12))\n",
        "print(s1)\n",
        "print(s2)\n",
        "print(s3)\n",
        "print(s4)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8LjKZh-Wecuy",
        "colab_type": "text"
      },
      "source": [
        "# Задача 5\n",
        "Вы покупаете автомобиль за 850 тыс. рублей. Ваш первоначальный взнос составляет 400 тыс. рублей. Остаток суммы вы хотите взять в кредит от Хоум Кредит Банка под 10.9%. Рассчитайте переплату по кредиту, если кредит будет оформлен на 5 лет. Для расчета платежа используйте формулу расчета аннуитетного платежа."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mJ0MiUGfecuz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Впишите сюда ваше решение\n",
        "\n",
        "amount = input(\"Сколько хотите взять денег: \")  # 350000\n",
        "amount = int(amount)\n",
        "pct = input(\"Под какой процент вам их дают: \")  # 10.9\n",
        "pct = float(pct)\n",
        "years = input(\"Насколько лет берете: \")         # 5\n",
        "years = float(years)\n",
        " \n",
        "pct = pct / 100\n",
        "month_pay = (amount * pct * (1 + pct)**years) / (12 * ((1 + pct)**years - 1))\n",
        "print(\"Ваш месячный платеж составит: %.2f\" % month_pay)\n",
        "summa = month_pay * years * 12\n",
        "print(\"За весь период вы заплатите: %.2f\" % summa)\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GnTA0xaF_bcV",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}
